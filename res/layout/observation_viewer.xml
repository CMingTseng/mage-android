<?xml version="1.0" encoding="utf-8"?>
<!-- <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:map="http://schemas.android.com/apk/res-auto"
    xmlns:mageForm="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"> -->
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:map="http://schemas.android.com/apk/res-auto"
    xmlns:mageForm="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical" >

    <RelativeLayout 
        android:layout_width="match_parent"
        android:layout_height="0dip"
        android:minHeight="200dp"
        android:layout_weight="1">
        
        <fragment
            android:id="@+id/mini_map"
            android:name="com.google.android.gms.maps.SupportMapFragment"
            android:layout_width="fill_parent"
            android:layout_height="fill_parent" />

        <!-- map:uiZoomControls="false"
        map:uiZoomGestures="false"
        map:uiScrollGestures="false"/> -->
		<LinearLayout 
		    android:layout_width="fill_parent"
		    android:layout_height="wrap_content"
		    android:background="@drawable/gradient_fade">

		    <TextView
		        android:id="@+id/username"
		        android:layout_width="wrap_content"
		        android:layout_height="wrap_content"
		        android:text="Nancy Drew"
		        android:textAppearance="?android:attr/textAppearanceSmall"
		        android:textColor="#ffffff"/>

		    <TextView
		        android:id="@+id/location"
		        android:layout_width="fill_parent"
		        android:layout_height="wrap_content"
		        android:gravity="right"
		        android:textAppearance="?android:attr/textAppearanceSmall"
		        android:textColor="#ffffff"/>

		</LinearLayout>
        
		
    </RelativeLayout>
	<ScrollView android:layout_height="wrap_content" android:layout_width="match_parent" android:layout_weight=".5">
	    <LinearLayout
	        android:id="@+id/propertyContainer"
	        android:layout_width="match_parent"
	        android:layout_height="wrap_content"
	        
	        android:orientation="vertical" >
		    <HorizontalScrollView 
	        android:layout_width="wrap_content"
	        android:layout_height="wrap_content">
		    <LinearLayout 
			    android:id="@+id/image_gallery"
			    android:layout_width="wrap_content" 
			    android:layout_height="100dp" 
			    android:orientation="horizontal">
	        </LinearLayout>
        </HorizontalScrollView>
	
	        <mil.nga.giat.mage.form.MageTextView
	            android:id="@+id/type"
	            mageForm:propertyKey="TYPE"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:layout_marginTop="10dp"
	            android:textAppearance="?android:attr/textAppearanceMedium" />
	        <mil.nga.giat.mage.form.MageTextView
	            android:id="@+id/date"
	            mageForm:propertyKey="OBSERVATION_DATE"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:layout_marginTop="5dp"
	            android:textAppearance="?android:attr/textAppearanceMedium" />
	        <mil.nga.giat.mage.form.MageTextView
	            android:id="@+id/description"
	            mageForm:propertyKey="DESCRIPTION"
	            android:layout_width="wrap_content"
	            android:layout_height="wrap_content"
	            android:text="The Dialog class is the base class for dialogs, but you should avoid instantiating Dialog directly. Instead, use one of the following subclasses:AlertDialogA dialog that can show a title, up to three buttons, a list of selectable items, or a custom layout.DatePickerDialog or TimePickerDialogA dialog with a pre-defined UI that allows the user to select a date or time.Avoid ProgressDialogAndroid includes another dialog class called ProgressDialog that shows a dialog with a progress bar. However, if you need to indicate loading or indeterminate progress, you should instead follow the design guidelines for Progress  Activity and use a ProgressBar in your layoutThese classes define the style and structure for your dialog, but you should use a DialogFragment as a container for your dialog. The DialogFragment class provides all the controls you need to create your dialog and manage its appearance, instead of calling methods on the Dialog object.Using DialogFragment to manage the dialog ensures that it correctly handles lifecycle events such as when the user presses the Back button or rotates the screen. The DialogFragment class also allows you to reuse the dialog's UI as an embeddable component in a larger UI, just like a traditional Fragment (such as when you want the dialog UI to appear differently on large and small screens).The following sections in this guide describe how to use a DialogFragment in combination with an AlertDialog object. If you'd like to create a date or time picker, you should instead read the Pickers guide.Note: Because the DialogFragment class was originally added with Android 3.0 (API level 11), this document describes how to use the DialogFragment class that's provided with the Support Library. By adding this library to your app, you can use DialogFragment and a variety of other APIs on devices running Android 1.6 or higher. If the minimum version your app supports is API level 11 or higher, then you can use the framework version of DialogFragment, but be aware that the links in this document are for the support library APIs. When using the support library, be sure that you import android.support.v4.app.DialogFragment class and not android.app.DialogFragment."
	            android:layout_marginTop="15dp"
	            android:textAppearance="?android:attr/textAppearanceSmall" />
	
	    </LinearLayout>
</ScrollView>

</LinearLayout>
<!--     </ScrollView> -->